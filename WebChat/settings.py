"""
Django settings for WebChat project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""


from dotenv import load_dotenv
import os, django_heroku, dj_database_url


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))



load_dotenv(dotenv_path='.env')



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
PRODUCTION = True



# Admins
ADMINS = [(os.environ.get('SUPER_USER_NAME'), os.environ.get('SUPER_USER_USERNAME'))]



ALLOWED_HOSTS = [
    '*'
]


# Application definition

INSTALLED_APPS = [
    # Django Apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third Party Apps
    'rest_framework',
    'rest_framework_simplejwt',
    'fontawesomefree',
    'channels',

    # My Apps
    'Apps.Auth',
    'Apps.Profile',
    'Apps.Info',
    'Apps.Chat',
]

MIDDLEWARE = [
    # Django Middlewares
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # Third Party Apps
    'whitenoise.middleware.WhiteNoiseMiddleware',

    # Flash Message Middleware
    'Apps.Auth.middlewares.FlashMessage',
]

ROOT_URLCONF = 'WebChat.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'WebChat.wsgi.application'
ASGI_APPLICATION = "WebChat.asgi.application"


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config() if PRODUCTION else {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}





# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT =  os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


MEDIA_URL = '/media/'





#######
####### EMAIL Configs
if PRODUCTION:

    EMAIL_BACKEND       = 'django.core.mail.backends.smtp.EmailBackend'

    EMAIL_HOST          = os.environ['EMAIL_HOST']
    EMAIL_PORT          = os.environ['EMAIL_PORT']
    EMAIL_HOST_USER     = os.environ['EMAIL_HOST_USER']
    EMAIL_HOST_PASSWORD = os.environ['EMAIL_HOST_PASSWORD']
    EMAIL_USE_TLS       = bool(os.environ['EMAIL_USE_TLS'])
    #EMAIL_USE_SSL       = bool(os.environ['EMAIL_USE_SSL'])


else:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

    EMAIL_HOST = '127.0.0.1'
    EMAIL_PORT = '8025'
    EMAIL_HOST_USER = 'test@test.com'
    EMAIL_HOST_PASSWORD = ''





###### Rest Framework
REST_FRAMEWORK = {

    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}




# Session
SESSION_COOKIE_AGE = 24 * 60 * 60





# Heroku Locals
django_heroku.settings(locals()) if PRODUCTION else None







##### Channels
###########################

ASGI_THREADS = 4

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': "channels.layers.InMemoryChannelLayer",
    },
}


